---
openapi: 3.0.1
info:
  title: Rent-A-Green API
  version: v1
paths:
  "/items":
    get:
      summary: list items
      tags:
      - Items
      responses:
        '200':
          description: successful
    post:
      summary: create item
      tags:
      - Items
      parameters: []
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                range:
                  type: string
                photo:
                  type: string
              required:
              - name
              - description
              - range
              - photo
  "/items/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show item
      tags:
      - Items
      responses:
        '200':
          description: successful
    delete:
      summary: delete item
      tags:
      - Items
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
  "/reservations":
    get:
      summary: list reservations
      tags:
      - Reservations
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
    post:
      summary: create reservation
      tags:
      - Reservations
      parameters: []
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date
                city:
                  type: string
                vehicle_id:
                  type: integer
              required:
              - date
              - city
              - vehicle_id
              - user_id
  "/users/signup":
    post:
      summary: new registration
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                    email:
                      type: string
                      pattern: "^\\S+@\\S+\\.\\S+$"
                      format: email
                    password:
                      type: string
                      format: password
                  required:
                  - name
                  - email
                  - password
              required:
              - user
  "/users/login":
    post:
      summary: create session
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      pattern: "^\\S+@\\S+\\.\\S+$"
                      format: email
                    password:
                      type: string
                      format: password
                  required:
                  - email
                  - password
              required:
              - user
  "/users/logout":
    delete:
      summary: delete session
      tags:
      - Users
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
servers:
- url: https://{herokuapp}
  variables:
    herokuapp:
      default: rent-a-green.herokuapp.com
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3001
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  bearerAuth: []
